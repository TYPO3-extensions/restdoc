plugin.tx_restdoc_pi1 {
	## baseWrap supports stdWrap properties, if set will replace the default wrap
	## around the plugin: <div class="tx-restdoc-pi1"> ... </div>
	#baseWrap {
	#	wrap = <div> | </div>
	#}

	path = {$plugin.tx_restdoc.path}
	mode = {$plugin.tx_restdoc.mode}
	showPermalink = {$plugin.tx_restdoc.showPermalink}
	pathSeparator = {$plugin.tx_restdoc.pathSeparator}

	// stdWrap functions being applied to setup.defaultFile
	setup.defaultFile = index

	setup.BODY {
		image {
			renderObj = IMAGE
			renderObj {
				file.import.field = src
				file.maxW < tt_content.image.20.maxW
				altText.field = alt
			}
		}
	}

	setup.TOC {
		renderObj = COA
		renderObj {
			10 = HMENU
			10 {
				special = userfunction
				special.userFunc = tx_restdoc_pi1->makeMenuArray
				special.userFunc.type = menu

				1 = TMENU
				1 {
					wrap = <ul> | </ul>
					noBlur = 1
					NO.wrapItemAndSub = <li> | </li>

					CUR = 1
					CUR.wrapItemAndSub = <li class="current"> | </li>
				}
				2 < .1

				stdWrap.preCObject = TEXT
				stdWrap.preCObject.data = LLL:EXT:restdoc/pi1/locallang.xml:header_toc
				stdWrap.preCObject.wrap = <h2> | </h2>
			}

			20 < .10
			20.stdWrap.preCObject.data = LLL:EXT:restdoc/pi1/locallang.xml:header_previous_topic
			20.stdWrap.preCObject.wrap = <h3> | </h3>
			20.stdWrap.required = 1
			20.special.userFunc.type = previous

			30 < .20
			30.stdWrap.preCObject.data = LLL:EXT:restdoc/pi1/locallang.xml:header_next_topic
			30.special.userFunc.type = next
		}
	}

	setup.RECENT {
		renderObj = HMENU
		renderObj {
			special = userfunction
			special {
				userFunc = tx_restdoc_pi1->makeMenuArray
				userFunc.type = updated
				# chapters must have been updated within the last 60 days (3600*24*60)
				maxAge = 3600*24*60
				limit = 10
			}
			wrap = <ul> | </ul>

			1 = TMENU
			1 {
				noBlur = 1
				NO {
					wrapItemAndSub = <li> | </li>

					# Prepend the date
					before.field = SYS_LASTCHANGED
					before.strftime = %d.%m.%Y
					before.noTrimWrap = |<span class="tx-restdoc-date">|:</span> |
				}
			}
		}
	}

	setup.QUICK_NAVIGATION {
		renderObj = COA
		renderObj {
			10 = TEXT
			10 {
				data = LLL:EXT:restdoc/pi1/locallang.xml:quicknavigation_home
				typolink.parameter.field = home_uri
			}
			11 = TEXT
			11.value = |
			11.noTrimWrap = | | |

			20 = TEXT
			20 {
				data = LLL:EXT:restdoc/pi1/locallang.xml:quicknavigation_previous_topic
				typolink.parameter.field = previous_uri
				typolink.title.field = previous_title
				if.isTrue.field = has_previous
			}
			21 < .11
			21.if {
				isTrue.field = has_previous
				value.field = has_next
				equals = 1
			}

			30 = TEXT
			30 {
				data = LLL:EXT:restdoc/pi1/locallang.xml:quicknavigation_next_topic
				typolink.parameter.field = next_uri
				typolink.title.field = next_title
				if.isTrue.field = has_next
			}
			31 < .11
			31.if.isTrue.field = has_index

			40 = TEXT
			40 {
				data = LLL:EXT:restdoc/pi1/locallang.xml:quicknavigation_index
				typolink.parameter.field = index_uri
				typolink.title.data < .data
				if.isTrue.field = has_index
			}

		}
	}

	setup.BREADCRUMB {
		renderObj = HMENU
		renderObj {
			special = userfunction
			special.userFunc = tx_restdoc_pi1->makeMenuArray
			special.userFunc.type = breadcrumb

			1 = TMENU
			1 {
				noBlur = 1
				NO.linkWrap = | &raquo; |*||*| |
				NO.stdWrap.noTrimWrap = | | |

				CUR < .NO
				CUR = 1
				CUR.doNotLinkIt = 1
			}
		}
	}

}